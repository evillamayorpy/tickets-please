openapi: 3.0.3
info:
  title: 'Tickets Please API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Authenticates a user and returns a token'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    token: '{YOUR_AUTH_TOKEN}'
                  message: Authenticated
                  status: 200
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: '{YOUR_AUTH_TOKEN}'
                  message:
                    type: string
                    example: Authenticated
                  status:
                    type: integer
                    example: 200
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rau.jarred@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '"auK7*''r'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: Logout
      operationId: logout
      description: 'Signs out the user and destroys the API token'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Authentication
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The Manager'
                  email: manager@manager.com
                  email_verified_at: null
                  is_manager: true
                  created_at: '2025-01-05T19:23:38.000000Z'
                  updated_at: '2025-01-05T19:23:38.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The Manager'
                  email:
                    type: string
                    example: manager@manager.com
                  email_verified_at:
                    type: string
                    example: null
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2025-01-05T19:23:38.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-05T19:23:38.000000Z'
      tags:
        - Endpoints
  '/api/v1/tickets/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: ticket
                    id: 1
                    attributes:
                      title: 'vero adipisci vel'
                      description: 'Quam velit aut iure qui. Commodi culpa autem est adipisci. Perspiciatis quia et ullam fuga. Non nemo explicabo et quos aspernatur sint non error.'
                      status: C
                      createdAt: '2025-01-05T19:23:37.000000Z'
                      updatedAt: '2025-01-05T19:33:31.000000Z'
                    relationships:
                      author:
                        data:
                          type: user
                          id: 3
                        links:
                          self: 'http://localhost:8000/api/v1/authors/3'
                    links:
                      self: 'http://localhost:8000/api/v1/tickets/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: ticket
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                            example: 'vero adipisci vel'
                          description:
                            type: string
                            example: 'Quam velit aut iure qui. Commodi culpa autem est adipisci. Perspiciatis quia et ullam fuga. Non nemo explicabo et quos aspernatur sint non error.'
                          status:
                            type: string
                            example: C
                          createdAt:
                            type: string
                            example: '2025-01-05T19:23:37.000000Z'
                          updatedAt:
                            type: string
                            example: '2025-01-05T19:33:31.000000Z'
                      relationships:
                        type: object
                        properties:
                          author:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    example: user
                                  id:
                                    type: integer
                                    example: 3
                              links:
                                type: object
                                properties:
                                  self:
                                    type: string
                                    example: 'http://localhost:8000/api/v1/authors/3'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/tickets/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/tickets/{ticket_id}':
    put:
      summary: ''
      operationId: putApiV1TicketsTicket_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: officia
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Ullam sunt quam dicta quis.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: X
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 10
                                  nullable: false
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: vel
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Quos exercitationem sunt aut voluptate.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: C
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 12
                                  nullable: false
    parameters:
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Kathlyn Swaniawski'
                        email: schamberger.gust@example.org
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Alek Reilly'
                        email: oshanahan@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Prof. Paul Graham'
                        email: bhudson@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Nicholas Russel III'
                        email: enola56@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Emmie Torphy'
                        email: dare.alycia@example.org
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Madilyn Bergstrom'
                        email: maude19@example.org
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Mrs. Cleora Armstrong V'
                        email: brice47@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Prof. Irving Schamberger MD'
                        email: kstokes@example.net
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Jany Kihn'
                        email: cummerata.gregoria@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Miss Mireille Predovic'
                        email: gulgowski.josie@example.com
                        isManager: false
                      links:
                        self: 'http://localhost:8000/api/v1/authors/10'
                    -
                      type: user
                      id: 11
                      attributes:
                        name: 'The Manager'
                        email: manager@manager.com
                        isManager: true
                      links:
                        self: 'http://localhost:8000/api/v1/authors/11'
                  links:
                    first: 'http://localhost/api/v1/users?page=1'
                    last: 'http://localhost/api/v1/users?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/users?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/users'
                    per_page: 15
                    to: 11
                    total: 11
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Kathlyn Swaniawski'
                          email: schamberger.gust@example.org
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Alek Reilly'
                          email: oshanahan@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Prof. Paul Graham'
                          email: bhudson@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Nicholas Russel III'
                          email: enola56@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Emmie Torphy'
                          email: dare.alycia@example.org
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Madilyn Bergstrom'
                          email: maude19@example.org
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Mrs. Cleora Armstrong V'
                          email: brice47@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Prof. Irving Schamberger MD'
                          email: kstokes@example.net
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Jany Kihn'
                          email: cummerata.gregoria@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Miss Mireille Predovic'
                          email: gulgowski.josie@example.com
                          isManager: false
                        links:
                          self: 'http://localhost:8000/api/v1/authors/10'
                      -
                        type: user
                        id: 11
                        attributes:
                          name: 'The Manager'
                          email: manager@manager.com
                          isManager: true
                        links:
                          self: 'http://localhost:8000/api/v1/authors/11'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Kathlyn Swaniawski'
                            email:
                              type: string
                              example: schamberger.gust@example.org
                            isManager:
                              type: boolean
                              example: false
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost:8000/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/users?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/users?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/users'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 11
                      total:
                        type: integer
                        example: 11
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: maxime
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: tommie35@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: 'Hu{Wb~'
                          nullable: false
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Kathlyn Swaniawski'
                      email: schamberger.gust@example.org
                      isManager: false
                    links:
                      self: 'http://localhost:8000/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Kathlyn Swaniawski'
                          email:
                            type: string
                            example: schamberger.gust@example.org
                          isManager:
                            type: boolean
                            example: false
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/users/{user}':
    put:
      summary: ''
      operationId: putApiV1UsersUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: eos
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: mariana.cole@example.net
                          nullable: false
                        isManager:
                          type: boolean
                          description: ''
                          example: true
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: 'ao#![eJURAY)[7~{'
                          nullable: false
    patch:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: ''
                          example: repellat
                          nullable: false
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: hoberbrunner@example.org
                          nullable: false
                        isMaganer:
                          type: boolean
                          description: ''
                          example: false
                          nullable: false
                        password:
                          type: string
                          description: ''
                          example: '`v\.?YC{ts<Y8u['
                          nullable: false
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/authors:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: user
                      id: 1
                      attributes:
                        name: 'Kathlyn Swaniawski'
                        email: schamberger.gust@example.org
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/1'
                    -
                      type: user
                      id: 2
                      attributes:
                        name: 'Alek Reilly'
                        email: oshanahan@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/2'
                    -
                      type: user
                      id: 3
                      attributes:
                        name: 'Prof. Paul Graham'
                        email: bhudson@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/3'
                    -
                      type: user
                      id: 4
                      attributes:
                        name: 'Nicholas Russel III'
                        email: enola56@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/4'
                    -
                      type: user
                      id: 5
                      attributes:
                        name: 'Emmie Torphy'
                        email: dare.alycia@example.org
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/5'
                    -
                      type: user
                      id: 6
                      attributes:
                        name: 'Madilyn Bergstrom'
                        email: maude19@example.org
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/6'
                    -
                      type: user
                      id: 7
                      attributes:
                        name: 'Mrs. Cleora Armstrong V'
                        email: brice47@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/7'
                    -
                      type: user
                      id: 8
                      attributes:
                        name: 'Prof. Irving Schamberger MD'
                        email: kstokes@example.net
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/8'
                    -
                      type: user
                      id: 9
                      attributes:
                        name: 'Jany Kihn'
                        email: cummerata.gregoria@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/9'
                    -
                      type: user
                      id: 10
                      attributes:
                        name: 'Miss Mireille Predovic'
                        email: gulgowski.josie@example.com
                        isManager: false
                        emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                        updatedAd: '2025-01-05T19:23:37.000000Z'
                        createdAd: '2025-01-05T19:23:37.000000Z'
                      links:
                        self: 'http://localhost:8000/api/v1/authors/10'
                  links:
                    first: 'http://localhost/api/v1/authors?page=1'
                    last: 'http://localhost/api/v1/authors?page=7'
                    prev: null
                    next: 'http://localhost/api/v1/authors?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/authors?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors'
                    per_page: 15
                    to: 10
                    total: 105
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: user
                        id: 1
                        attributes:
                          name: 'Kathlyn Swaniawski'
                          email: schamberger.gust@example.org
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/1'
                      -
                        type: user
                        id: 2
                        attributes:
                          name: 'Alek Reilly'
                          email: oshanahan@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/2'
                      -
                        type: user
                        id: 3
                        attributes:
                          name: 'Prof. Paul Graham'
                          email: bhudson@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/3'
                      -
                        type: user
                        id: 4
                        attributes:
                          name: 'Nicholas Russel III'
                          email: enola56@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/4'
                      -
                        type: user
                        id: 5
                        attributes:
                          name: 'Emmie Torphy'
                          email: dare.alycia@example.org
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/5'
                      -
                        type: user
                        id: 6
                        attributes:
                          name: 'Madilyn Bergstrom'
                          email: maude19@example.org
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/6'
                      -
                        type: user
                        id: 7
                        attributes:
                          name: 'Mrs. Cleora Armstrong V'
                          email: brice47@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/7'
                      -
                        type: user
                        id: 8
                        attributes:
                          name: 'Prof. Irving Schamberger MD'
                          email: kstokes@example.net
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/8'
                      -
                        type: user
                        id: 9
                        attributes:
                          name: 'Jany Kihn'
                          email: cummerata.gregoria@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/9'
                      -
                        type: user
                        id: 10
                        attributes:
                          name: 'Miss Mireille Predovic'
                          email: gulgowski.josie@example.com
                          isManager: false
                          emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                          updatedAd: '2025-01-05T19:23:37.000000Z'
                          createdAd: '2025-01-05T19:23:37.000000Z'
                        links:
                          self: 'http://localhost:8000/api/v1/authors/10'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: user
                        id:
                          type: integer
                          example: 1
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Kathlyn Swaniawski'
                            email:
                              type: string
                              example: schamberger.gust@example.org
                            isManager:
                              type: boolean
                              example: false
                            emailVerifiedAd:
                              type: string
                              example: '2025-01-05T19:23:37.000000Z'
                            updatedAd:
                              type: string
                              example: '2025-01-05T19:23:37.000000Z'
                            createdAd:
                              type: string
                              example: '2025-01-05T19:23:37.000000Z'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost:8000/api/v1/authors/1'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/authors?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/authors?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 105
      tags:
        - Endpoints
  '/api/v1/authors/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: user
                    id: 1
                    attributes:
                      name: 'Kathlyn Swaniawski'
                      email: schamberger.gust@example.org
                      isManager: false
                      emailVerifiedAd: '2025-01-05T19:23:37.000000Z'
                      updatedAd: '2025-01-05T19:23:37.000000Z'
                      createdAd: '2025-01-05T19:23:37.000000Z'
                    links:
                      self: 'http://localhost:8000/api/v1/authors/1'
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: user
                      id:
                        type: integer
                        example: 1
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Kathlyn Swaniawski'
                          email:
                            type: string
                            example: schamberger.gust@example.org
                          isManager:
                            type: boolean
                            example: false
                          emailVerifiedAd:
                            type: string
                            example: '2025-01-05T19:23:37.000000Z'
                          updatedAd:
                            type: string
                            example: '2025-01-05T19:23:37.000000Z'
                          createdAd:
                            type: string
                            example: '2025-01-05T19:23:37.000000Z'
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'http://localhost:8000/api/v1/authors/1'
      tags:
        - Endpoints
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the author.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author_id}/tickets':
    get:
      summary: ''
      operationId: getApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: []
                  links:
                    first: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                    last: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: null
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/authors/molestiae/tickets'
                    per_page: 15
                    to: null
                    total: 0
                properties:
                  data:
                    type: array
                    example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: string
                        example: null
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/authors/molestiae/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/authors/molestiae/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: string
                        example: null
                      total:
                        type: integer
                        example: 0
      tags:
        - Endpoints
    post:
      summary: ''
      operationId: postApiV1AuthorsAuthor_idTickets
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: 'A, C, H, or X'
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                author:
                  type: integer
                  description: 'The author id. The <code>id</code> of an existing record in the users table.'
                  example: 0
                  nullable: false
              required:
                - data
                - author
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: molestiae
        required: true
        schema:
          type: string
  '/api/v1/authors/{author_id}/tickets/{id}':
    delete:
      summary: ''
      operationId: deleteApiV1AuthorsAuthor_idTicketsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: author_id
        description: 'The ID of the author.'
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/authors/{author}/tickets/{ticket_id}':
    put:
      summary: ''
      operationId: putApiV1AuthorsAuthorTicketsTicket_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: consectetur
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Sed eveniet vero quae reprehenderit omnis.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: X
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 20
                                  nullable: false
    patch:
      summary: ''
      operationId: patchApiV1AuthorsAuthorTicketsTicket_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: ''
                          example: aut
                          nullable: false
                        description:
                          type: string
                          description: ''
                          example: 'Et illo cum accusamus culpa magnam aliquam ea.'
                          nullable: false
                        status:
                          type: string
                          description: ''
                          example: C
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: ''
                                  example: 12
                                  nullable: false
    parameters:
      -
        in: path
        name: author
        description: 'The author.'
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: ticket_id
        description: 'The ID of the ticket.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/user:
    get:
      summary: ''
      operationId: getApiV1User
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  name: 'The Manager'
                  email: manager@manager.com
                  email_verified_at: null
                  is_manager: true
                  created_at: '2025-01-05T19:23:38.000000Z'
                  updated_at: '2025-01-05T19:23:38.000000Z'
                properties:
                  id:
                    type: integer
                    example: 11
                  name:
                    type: string
                    example: 'The Manager'
                  email:
                    type: string
                    example: manager@manager.com
                  email_verified_at:
                    type: string
                    example: null
                  is_manager:
                    type: boolean
                    example: true
                  created_at:
                    type: string
                    example: '2025-01-05T19:23:38.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-05T19:23:38.000000Z'
      tags:
        - Endpoints
  /api/v1/tickets:
    get:
      summary: 'GET All tickets'
      operationId: gETAllTickets
      description: ''
      parameters:
        -
          in: query
          name: sort
          description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
          example: 'sort=title,-createdAt'
          required: false
          schema:
            type: string
            description: 'Data field(s) to sort by. Separate multiple fields with commas. Denote descending sort with a minus sign.'
            example: 'sort=title,-createdAt'
            nullable: false
        -
          in: query
          name: 'filter[status]'
          description: 'Filter by status code: A, C, H, X.'
          example: null
          required: false
          schema:
            type: string
            description: 'Filter by status code: A, C, H, X.'
            example: null
            nullable: false
        -
          in: query
          name: 'filter[title]'
          description: 'Filter by title. Wildcards is supported.'
          example: '*title*'
          required: false
          schema:
            type: string
            description: 'Filter by title. Wildcards is supported.'
            example: '*title*'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: ticket
                      id: 106
                      attributes:
                        title: 'Un ticket en español'
                        status: A
                        createdAt: '2025-01-14T21:24:27.000000Z'
                        updatedAt: '2025-01-14T21:24:27.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/106'
                    -
                      type: ticket
                      id: 104
                      attributes:
                        title: 'New Ticket'
                        status: A
                        createdAt: '2025-01-06T14:23:00.000000Z'
                        updatedAt: '2025-01-06T14:23:00.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/104'
                    -
                      type: ticket
                      id: 103
                      attributes:
                        title: 'Un ticket en español'
                        status: A
                        createdAt: '2025-01-06T14:02:14.000000Z'
                        updatedAt: '2025-01-06T14:02:14.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/103'
                    -
                      type: ticket
                      id: 102
                      attributes:
                        title: 'New Ticket'
                        status: A
                        createdAt: '2025-01-06T14:01:44.000000Z'
                        updatedAt: '2025-01-06T14:01:44.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/102'
                    -
                      type: ticket
                      id: 101
                      attributes:
                        title: 'Replace this title'
                        status: A
                        createdAt: '2025-01-05T23:31:59.000000Z'
                        updatedAt: '2025-01-05T23:31:59.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 1
                          links:
                            self: 'http://localhost:8000/api/v1/authors/1'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/101'
                    -
                      type: ticket
                      id: 66
                      attributes:
                        title: 'doloremque et ea'
                        status: X
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 10
                          links:
                            self: 'http://localhost:8000/api/v1/authors/10'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/66'
                    -
                      type: ticket
                      id: 76
                      attributes:
                        title: 'hic veniam velit'
                        status: A
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost:8000/api/v1/authors/8'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/76'
                    -
                      type: ticket
                      id: 67
                      attributes:
                        title: 'beatae similique quibusdam'
                        status: A
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 2
                          links:
                            self: 'http://localhost:8000/api/v1/authors/2'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/67'
                    -
                      type: ticket
                      id: 68
                      attributes:
                        title: 'quaerat qui cum'
                        status: A
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 8
                          links:
                            self: 'http://localhost:8000/api/v1/authors/8'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/68'
                    -
                      type: ticket
                      id: 69
                      attributes:
                        title: 'quos sunt quas'
                        status: C
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 6
                          links:
                            self: 'http://localhost:8000/api/v1/authors/6'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/69'
                    -
                      type: ticket
                      id: 70
                      attributes:
                        title: 'ab dolor dolorem'
                        status: A
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 3
                          links:
                            self: 'http://localhost:8000/api/v1/authors/3'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/70'
                    -
                      type: ticket
                      id: 74
                      attributes:
                        title: 'dicta dolore minima'
                        status: A
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 7
                          links:
                            self: 'http://localhost:8000/api/v1/authors/7'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/74'
                    -
                      type: ticket
                      id: 54
                      attributes:
                        title: 'suscipit quas sapiente'
                        status: X
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 7
                          links:
                            self: 'http://localhost:8000/api/v1/authors/7'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/54'
                    -
                      type: ticket
                      id: 75
                      attributes:
                        title: 'rerum sint delectus'
                        status: X
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 4
                          links:
                            self: 'http://localhost:8000/api/v1/authors/4'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/75'
                    -
                      type: ticket
                      id: 71
                      attributes:
                        title: 'qui porro dolorem'
                        status: C
                        createdAt: '2025-01-05T19:23:38.000000Z'
                        updatedAt: '2025-01-05T19:23:38.000000Z'
                      relationships:
                        author:
                          data:
                            type: user
                            id: 6
                          links:
                            self: 'http://localhost:8000/api/v1/authors/6'
                      links:
                        self: 'http://localhost:8000/api/v1/tickets/71'
                  links:
                    first: 'http://localhost/api/v1/tickets?page=1'
                    last: 'http://localhost/api/v1/tickets?page=7'
                    prev: null
                    next: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 7
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=6'
                        label: '6'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=7'
                        label: '7'
                        active: false
                      -
                        url: 'http://localhost/api/v1/tickets?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://localhost/api/v1/tickets'
                    per_page: 15
                    to: 15
                    total: 105
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: ticket
                        id: 106
                        attributes:
                          title: 'Un ticket en español'
                          status: A
                          createdAt: '2025-01-14T21:24:27.000000Z'
                          updatedAt: '2025-01-14T21:24:27.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/106'
                      -
                        type: ticket
                        id: 104
                        attributes:
                          title: 'New Ticket'
                          status: A
                          createdAt: '2025-01-06T14:23:00.000000Z'
                          updatedAt: '2025-01-06T14:23:00.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/104'
                      -
                        type: ticket
                        id: 103
                        attributes:
                          title: 'Un ticket en español'
                          status: A
                          createdAt: '2025-01-06T14:02:14.000000Z'
                          updatedAt: '2025-01-06T14:02:14.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/103'
                      -
                        type: ticket
                        id: 102
                        attributes:
                          title: 'New Ticket'
                          status: A
                          createdAt: '2025-01-06T14:01:44.000000Z'
                          updatedAt: '2025-01-06T14:01:44.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/102'
                      -
                        type: ticket
                        id: 101
                        attributes:
                          title: 'Replace this title'
                          status: A
                          createdAt: '2025-01-05T23:31:59.000000Z'
                          updatedAt: '2025-01-05T23:31:59.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 1
                            links:
                              self: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/101'
                      -
                        type: ticket
                        id: 66
                        attributes:
                          title: 'doloremque et ea'
                          status: X
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 10
                            links:
                              self: 'http://localhost:8000/api/v1/authors/10'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/66'
                      -
                        type: ticket
                        id: 76
                        attributes:
                          title: 'hic veniam velit'
                          status: A
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost:8000/api/v1/authors/8'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/76'
                      -
                        type: ticket
                        id: 67
                        attributes:
                          title: 'beatae similique quibusdam'
                          status: A
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 2
                            links:
                              self: 'http://localhost:8000/api/v1/authors/2'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/67'
                      -
                        type: ticket
                        id: 68
                        attributes:
                          title: 'quaerat qui cum'
                          status: A
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 8
                            links:
                              self: 'http://localhost:8000/api/v1/authors/8'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/68'
                      -
                        type: ticket
                        id: 69
                        attributes:
                          title: 'quos sunt quas'
                          status: C
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 6
                            links:
                              self: 'http://localhost:8000/api/v1/authors/6'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/69'
                      -
                        type: ticket
                        id: 70
                        attributes:
                          title: 'ab dolor dolorem'
                          status: A
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 3
                            links:
                              self: 'http://localhost:8000/api/v1/authors/3'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/70'
                      -
                        type: ticket
                        id: 74
                        attributes:
                          title: 'dicta dolore minima'
                          status: A
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 7
                            links:
                              self: 'http://localhost:8000/api/v1/authors/7'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/74'
                      -
                        type: ticket
                        id: 54
                        attributes:
                          title: 'suscipit quas sapiente'
                          status: X
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 7
                            links:
                              self: 'http://localhost:8000/api/v1/authors/7'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/54'
                      -
                        type: ticket
                        id: 75
                        attributes:
                          title: 'rerum sint delectus'
                          status: X
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 4
                            links:
                              self: 'http://localhost:8000/api/v1/authors/4'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/75'
                      -
                        type: ticket
                        id: 71
                        attributes:
                          title: 'qui porro dolorem'
                          status: C
                          createdAt: '2025-01-05T19:23:38.000000Z'
                          updatedAt: '2025-01-05T19:23:38.000000Z'
                        relationships:
                          author:
                            data:
                              type: user
                              id: 6
                            links:
                              self: 'http://localhost:8000/api/v1/authors/6'
                        links:
                          self: 'http://localhost:8000/api/v1/tickets/71'
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: ticket
                        id:
                          type: integer
                          example: 106
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'Un ticket en español'
                            status:
                              type: string
                              example: A
                            createdAt:
                              type: string
                              example: '2025-01-14T21:24:27.000000Z'
                            updatedAt:
                              type: string
                              example: '2025-01-14T21:24:27.000000Z'
                        relationships:
                          type: object
                          properties:
                            author:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                      example: user
                                    id:
                                      type: integer
                                      example: 1
                                links:
                                  type: object
                                  properties:
                                    self:
                                      type: string
                                      example: 'http://localhost:8000/api/v1/authors/1'
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: 'http://localhost:8000/api/v1/tickets/106'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=1'
                      last:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=7'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://localhost/api/v1/tickets?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 7
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=6'
                            label: '6'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=7'
                            label: '7'
                            active: false
                          -
                            url: 'http://localhost/api/v1/tickets?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://localhost/api/v1/tickets'
                      per_page:
                        type: integer
                        example: 15
                      to:
                        type: integer
                        example: 15
                      total:
                        type: integer
                        example: 105
      tags:
        - 'Managing Tickets'
    post:
      summary: 'Create a ticket'
      operationId: createATicket
      description: 'Creates a new ticket. Users can create ticket for themeselves. Managers can create tickets for any user.'
      parameters: []
      responses: {  }
      tags:
        - 'Managing Tickets'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        title:
                          type: string
                          description: "The ticket's title (method)."
                          example: No-example
                          nullable: false
                        description:
                          type: string
                          description: "The ticket's description."
                          example: No-example
                          nullable: false
                        status:
                          type: string
                          description: "The ticket's status."
                          example: 'A, C, H, or X'
                          nullable: false
                          enum:
                            - A
                            - C
                            - H
                            - X
                    relationships:
                      type: object
                      description: ''
                      example: []
                      nullable: false
                      properties:
                        author:
                          type: object
                          description: ''
                          example: []
                          nullable: false
                          properties:
                            data:
                              type: object
                              description: ''
                              example: []
                              nullable: false
                              properties:
                                id:
                                  type: integer
                                  description: 'The author id. The <code>id</code> of an existing record in the users table.'
                                  example: 0
                                  nullable: false
              required:
                - data
tags:
  -
    name: Authentication
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Managing Tickets'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
